{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/ commentStore.ts","app/layout/Navbar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivitityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/form/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/form/modals/ModalContainer.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/form/imageUpload/PhotoWidgetCropper.tsx","app/common/form/imageUpload/PhotoWidgetDropzone.tsx","app/common/form/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","setLoadingInitial","axiosParams","result","setActivity","setPagination","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","profile","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","ActivitityListItemAttendee","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","disbled","verticalAlign","length","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.b629d5e7.chunk.js","sourcesContent":["export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber;\n  pageSize;\n\n  constructor(pageNumber = 1, pageSize = 2) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { PaginatedResult } from \"../models/pagination\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"../stores/store\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use((config) => {\n  const token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    if (process.env.NODE_ENV === \"development\") {\n      await sleep(1000);\n    }\n    const pagination = response.headers[\"pagination\"];\n    if (pagination) {\n      response.data = new PaginatedResult(\n        response.data,\n        JSON.parse(pagination)\n      );\n      return response as AxiosResponse<PaginatedResult<any>>;\n    }\n    return response;\n  },\n  (error: AxiosError) => {\n    const { data, status, config } = error.response!;\n    switch (status) {\n      case 400:\n        if (typeof data === \"string\") {\n          toast.error(data);\n        }\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\n          history.push(\"/not-found\");\n        }\n        if (data.errors) {\n          const modalStateErrors = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modalStateErrors.push(data.errors[key]);\n            }\n          }\n          throw modalStateErrors.flat();\n        } else {\n          toast.error(data);\n        }\n        break;\n      case 401:\n        toast.error(\"unauthorized\");\n        break;\n      case 404:\n        history.push(\"/not-found\");\n        break;\n      case 500:\n        store.commonStore.setServerError(data);\n        history.push(\"/server-error\");\n        break;\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) =>\n    axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) =>\n    axios\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\n      .then(responseBody),\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) =>\n    requests.post<void>(\"/activities\", activity),\n  update: (activity: ActivityFormValues) =>\n    requests.put<void>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\n};\n\nconst Account = {\n  current: () => requests.get<User>(\"/account\"),\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\n  register: (user: UserFormValues) =>\n    requests.post<User>(\"/account/register\", user),\n};\n\nconst Profiles = {\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append(\"File\", file);\n    return axios.post<Photo>(\"photos\", formData, {\n      headers: { \"Content-type\": \"multipart/form-data\" },\n    });\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  updateFollowing: (username: string) =>\n    requests.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) =>\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) =>\n    requests.get<UserActivity[]>(\n      `/profiles/${username}/activities?predicate=${predicate}`\n    ),\n};\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles,\n};\n\nexport default agent;\n","import { Profile } from \"./profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = \"\";\n  category: string = \"\";\n  description: string = \"\";\n  date: Date | null = null;\n  city: string = \"\";\n  venue: string = \"\";\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.venue = activity.venue;\n      this.city = activity.city;\n    }\n  }\n}\n","import { User } from \"./user\";\n\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  followersCount: number;\n  followingCount: number;\n  following: boolean;\n  photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n  constructor(user: User) {\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n\nexport interface UserActivity {\n  id: string;\n  title: string;\n  category: string;\n  date: Date;\n}\n","import { format } from \"date-fns\";\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\nimport { Profile } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set(\"all\", true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    );\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== \"startDate\") this.predicate.delete(key);\n      });\n    };\n    switch (predicate) {\n      case \"all\":\n        resetPredicate();\n        this.predicate.set(\"all\", true);\n        break;\n      case \"isGoing\":\n        resetPredicate();\n        this.predicate.set(\"isGoing\", true);\n        break;\n      case \"isHost\":\n        resetPredicate();\n        this.predicate.set(\"isHost\", true);\n        break;\n      case \"startDate\":\n        this.predicate.delete(\"startDate\");\n        this.predicate.set(\"startDate\", value);\n    }\n  };\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === \"startDate\") {\n        params.append(key, (value as Date).toISOString());\n      } else {\n        params.append(key, value);\n      }\n    });\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort(\n      (a, b) => a.date!.getTime() - b.date!.getTime()\n    );\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.setLoadingInitial(true);\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach((activity) => {\n        this.setActivity(activity);\n      });\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitial(false);\n    }\n  };\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  };\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        (a) => a.username === user.username\n      );\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find(\n        (x) => x.username === activity.hostUsername\n      );\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  };\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  };\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    this.loading = true;\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {\n            ...this.getActivity(activity.id),\n            ...activity,\n          };\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(\n            (a) => a.username !== user?.username\n          );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled = !this.selectedActivity\n          ?.isCancelled;\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following\n            ? attendee.followersCount--\n            : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile = false;\n  uploading = false;\n  loading = false;\n  followings: Profile[] = [];\n  loadingFollowings = false;\n  activeTab = 0;\n  userActivities: UserActivity[] = [];\n  loadingActivities = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      (activeTab) => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    );\n  }\n\n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  };\n\n  get isCurrentUser() {\n    if (store.userStore.user && this.profile) {\n      return store.userStore.user.username === this.profile.username;\n    }\n    return false;\n  }\n\n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loadingProfile = false));\n    }\n  };\n\n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.uploading = false));\n    }\n  };\n\n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => (this.loading = false));\n      console.log(error);\n    }\n  };\n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos = this.profile.photos?.filter(\n            (p) => p.id !== photo.id\n          );\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => (this.loading = false));\n      console.log(error);\n    }\n  };\n\n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (\n          this.profile &&\n          this.profile.username !== store.userStore.user?.username &&\n          this.profile.username === username\n        ) {\n          following\n            ? this.profile.followersCount++\n            : this.profile.followersCount--;\n          this.profile.following = !this.profile.following;\n        }\n        if (\n          this.profile &&\n          this.profile.username === store.userStore.user?.username\n        ) {\n          following\n            ? this.profile.followingCount++\n            : this.profile.followingCount--;\n        }\n        this.followings.forEach((profile) => {\n          if (profile.username === username) {\n            profile.following\n              ? profile.followersCount--\n              : profile.followersCount++;\n            profile.following = !profile.following;\n          }\n        });\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      const followings = await agent.Profiles.listFollowings(\n        this.profile!.username,\n        predicate\n      );\n      runInAction(() => {\n        this.followings = followings;\n        this.loadingFollowings = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loadingFollowings = false));\n    }\n  };\n\n  loadUserActivities = async (username: string, predicate?: string) => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivities(\n        username,\n        predicate!\n      );\n      runInAction(() => {\n        this.userActivities = activities;\n        this.loadingActivities = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loadingActivities = false));\n    }\n  };\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n  user: User | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem(\"jwt\");\n    this.user = null;\n    history.push(\"/\");\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => (this.user = user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n  setImage = (image: string) => {\n    if (this.user) this.user.image = image;\n  };\n}\n","import { createContext, useContext } from \"react\";\nimport CommentStore from \"./ commentStore\";\nimport ActivityStore from \"./activityStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem(\"jwt\");\n  appLoaded = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      (token) => {\n        if (token) {\n          window.localStorage.setItem(\"jwt\", token);\n        } else {\n          window.localStorage.removeItem(\"jwt\");\n        }\n      }\n    );\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  };\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  };\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  };\n}\n","import { makeAutoObservable } from \"mobx\";\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  };\n\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  };\n}\n","import {\n  HubConnection,\n  HubConnectionBuilder,\n  LogLevel,\n} from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!,\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection\n        .start()\n        .catch((error) =>\n          console.log(\"Error establishing the connection: \", error)\n        );\n\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach((comment) => {\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\n          });\n          this.comments = comments;\n        });\n      });\n\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.unshift(comment);\n        });\n      });\n    }\n  };\n\n  stopHubConnection = () => {\n    this.hubConnection\n      ?.stop()\n      .catch((error) => console.log(\"Error stopping the connection: \", error));\n  };\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  };\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke(\"SendComment\", values);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\nexport default observer(function Navbar() {\n  const {\n    userStore: { user, logout },\n  } = useStore();\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} to=\"/\" exact header>\n          <img\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginRight: \"10px\" }}\n          />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\n        <Menu.Item>\n          <Button\n            as={NavLink}\n            to=\"/createActivity\"\n            positive\n            content=\"Create Activity\"\n          />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image src={user?.image || \"assets/user.png\"} avatar spaced=\"right\" />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={`/profiles/${user?.username}`}\n                text=\"My Profile\"\n                icon=\"user\"\n              ></Dropdown.Item>\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Menu, Header } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nexport default observer(function ActivityFilters() {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n        <Menu.Item\n          content=\"All Activities\"\n          active={predicate.has(\"all\")}\n          onClick={() => setPredicate(\"all\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has(\"isGoing\")}\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has(\"isHost\")}\n          onClick={() => setPredicate(\"isHost\", \"true\")}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\n        value={predicate.get(\"startDate\") || new Date()}\n      />\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent } from \"react\";\nimport { Button, Reveal } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton({ profile }: Props) {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, loading } = profileStore;\n\n  if (userStore.user?.username === profile.username) return null;\n\n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following\n      ? updateFollowing(username, false)\n      : updateFollowing(username, true);\n  }\n\n  return (\n    <Reveal animated=\"move\">\n      <Reveal.Content visible style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          color=\"teal\"\n          content={profile.following ? \"Following\" : \"Not following\"}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? \"red\" : \"green\"}\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileCard({ profile }: Props) {\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || \"/assets/user.png\"} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>Bio goes here</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name=\"user\" />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { List, Image, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/profile\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({\n  attendees,\n}: Props) {\n  const styles = {\n    borderColor: \"orange\",\n    borderWidth: 3,\n  };\n\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item\n              key={attendee.username}\n              as={Link}\n              to={`/profiles/${attendee.username}`}\n            >\n              <Image\n                size=\"mini\"\n                circular\n                src={attendee.image || \"/assets/user.png\"}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n});\n","import { format } from \"date-fns\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport ActivitityListItemAttendee from \"./ActivitityListItemAttendee\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default function ActivityListItem({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancelled && (\n          <Label\n            attached=\"top\"\n            color=\"red\"\n            content=\"Cancelled\"\n            style={{ textAlign: \"center\" }}\n          />\n        )}\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 3 }}\n              size=\"tiny\"\n              circular\n              src={activity.host?.image || \"/assets/user.png\"}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by{\" \"}\n                <Link to={`/profiles/${activity.hostUsername}`}>\n                  {activity.host?.displayName}\n                </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\n          <Icon name=\"marker\" />\n          {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivitityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React, { Fragment } from \"react\";\nimport { Header, Item, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityListItem from \"./ActivityListItem\";\n\nexport default observer(function ActivityList() {\n  const { activityStore } = useStore();\n  const { groupedActivities } = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color=\"teal\">\n            {group}\n          </Header>\n\n          {activities.map((activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { PagingParams } from \"../../../app/models/pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n  const {\n    loadActivities,\n    activityRegistry,\n    setPagingParams,\n    pagination,\n  } = activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  function handleGetNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        {activityStore.loadingInitial && !loadingNext ? (\n          <Grid.Column>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </Grid.Column>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={\n              !loadingNext &&\n              !!pagination &&\n              pagination.currentPage < pagination.totalPages\n            }\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width=\"6\">\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  type?: string;\n  label?: string;\n}\n\nexport default function MyTextInput(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function LoginForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .login(values)\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header\n            as=\"h2\"\n            content=\"Login to Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\ninterface Props {\n  errors: any;\n}\n\nexport default function ValidationErrors({ errors }: Props) {\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n    </Message>\n  );\n}\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nexport default observer(function RegisterForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{\n        displayName: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        error: null,\n      }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.register(values).catch((error) => setErrors({ error }))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form\n          className=\"ui form error\"\n          onSubmit={handleSubmit}\n          autoComplete=\"off\"\n        >\n          <Header\n            as=\"h2\"\n            content=\"Sign up to Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => <ValidationErrors errors={errors.error} />}\n          />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content=\"Register\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Segment, Image, Header, Button } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nexport default observer(function HomePage() {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image\n            size=\"massive\"\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginBottom: 12 }}\n          />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to Activities!\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button\n              onClick={() => modalStore.openModal(<LoginForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Login!\n            </Button>\n            <Button\n              onClick={() => modalStore.openModal(<RegisterForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Register!\n            </Button>\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n});\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  inverted?: boolean;\n  content?: string;\n}\n\nexport default function LoadingComponent({\n  inverted = true,\n  content = \"Loading...\",\n}: Props) {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n}\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  rows: number;\n  label?: string;\n}\n\nexport default function MyTextArea(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label, Select } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  options: any;\n  label?: string;\n}\n\nexport default function MySelectInput(props: Props) {\n  const [field, meta, helpers] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e, d) => helpers.setValue(d.value)}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","export const categoryOptions = [\n  { text: \"Drinks\", value: \"drinks\" },\n  { text: \"Culture\", value: \"culture\" },\n  { text: \"Film\", value: \"film\" },\n  { text: \"Food\", value: \"food\" },\n  { text: \"Music\", value: \"music\" },\n  { text: \"Travel\", value: \"travel\" },\n];\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/common/form/options/categoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport { ActivityFormValues } from \"../../../app/models/activity\";\nimport { v4 as uuid } from \"uuid\";\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const {\n    loadingInitial,\n    createActivity,\n    updateActivity,\n    loadActivity,\n  } = activityStore;\n\n  const { id } = useParams<{ id: string }>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(\n    new ActivityFormValues()\n  );\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"The activity title is required\"),\n    description: Yup.string().required(\"The activity description is required\"),\n    category: Yup.string().required(),\n    date: Yup.string().required(\"Date is required\").nullable(),\n    city: Yup.string().required(),\n    venue: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id)\n      loadActivity(id).then((activity) =>\n        setActivity(new ActivityFormValues(activity))\n      );\n  }, [id, loadActivity]);\n\n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() =>\n        history.push(`/activities/${newActivity.id}`)\n      );\n      updateActivity(activity);\n    } else {\n      updateActivity(activity).then(() =>\n        history.push(`/activities/${activity.id}`)\n      );\n    }\n  }\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" sub color=\"teal\" />\n      <Formik\n        validationSchema={validationSchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={(values) => handleFormSubmit(values)}\n      >\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MySelectInput\n              options={categoryOptions}\n              placeholder=\"Category\"\n              name=\"category\"\n            />\n            <MyDateInput\n              placeholderText=\"Date\"\n              showTimeSelect\n              timeCaption=\"time\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n              name=\"date\"\n            />\n            <Header content=\"Location Details\" sub color=\"teal\" />\n            <MyTextInput placeholder=\"City\" name=\"city\" />\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\n            <Button\n              disabled={isSubmitting || !dirty || !isValid}\n              loading={isSubmitting}\n              floated=\"right\"\n              positive\n              type=\"submit\"\n              content=\"Submit\"\n            />\n            <Button\n              as={Link}\n              to=\"/activities\"\n              floated=\"right\"\n              type=\"button\"\n              content=\"Cancel\"\n            />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n});\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [commentStore, activityId]);\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm())\n          }\n          initialValues={{ body: \"\" }}\n          validationSchema={Yup.object({\n            body: Yup.string().required(),\n          })}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className=\"ui form\">\n              <Field name=\"body\">\n                {(props: FieldProps) => (\n                  <div style={{ position: \"relative\" }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(e) => {\n                        if (e.key === \"Enter\" && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === \"Enter\" && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\n                  {comment.body}\n                </Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        {activity.isCancelled && (\n          <Label\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\n            ribbon\n            color=\"red\"\n            content=\"Cancelled\"\n          />\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\n                <p>\n                  Hosted by{\" \"}\n                  <strong>\n                    <Link to={`/profiles/${activity.host?.username}`}>\n                      {activity.host?.displayName}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCancelled ? \"green\" : \"red\"}\n              floated=\"left\"\n              basic\n              content={\n                activity.isCancelled\n                  ? \"Re-activate Activity\"\n                  : \"Cancel Activity\"\n              }\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button\n              disabled={activity.isCancelled}\n              as={Link}\n              to={`/manage/${activity.id}`}\n              color=\"orange\"\n              floated=\"right\"\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={updateAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button\n            disbled={activity.isCancelled}\n            loading={loading}\n            onClick={updateAttendance}\n            color=\"teal\"\n          >\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import React from \"react\";\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Activity } from \"../../../app/models/activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({\n  activity: { attendees, host },\n}: Props) {\n  if (!attendees) return null;\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item key={attendee.username} style={{ position: \"relative\" }}>\n              {attendee.username === host?.username && (\n                <Label\n                  style={{ position: \"absolute\" }}\n                  color=\"orange\"\n                  ribbon=\"right\"\n                >\n                  Host\n                </Label>\n              )}\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>\n                    {attendee.displayName}\n                  </Link>\n                </Item.Header>\n                {attendee.following && (\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\n                )}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\n\nexport default observer(function ActivityDetails() {\n  const { activityStore } = useStore();\n  const {\n    selectedActivity: activity,\n    loadActivity,\n    loadingInitial,\n    clearSelectedActivity,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  if (loadingInitial || !activity) return <LoadingComponent />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React, { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios\n      .get(baseUrl + \"buggy/not-found\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios\n      .get(baseUrl + \"buggy/bad-request\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios\n      .get(baseUrl + \"buggy/server-error\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios\n      .get(baseUrl + \"buggy/unauthorised\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error component\" />\n      <Segment>\n        <Button.Group widths=\"7\">\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button\n            onClick={handleBadRequest}\n            content=\"Bad Request\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleValidationError}\n            content=\"Validation Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleServerError}\n            content=\"Server Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleUnauthorised}\n            content=\"Unauthorised\"\n            basic\n            primary\n          />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors && <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nexport default function NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name=\"search\" />\n        Oops - we've looked everywhere and could not find this.\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to=\"/activities\" primary>\n          Return to activities page\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Container, Header, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function ServerError() {\n  const { commonStore } = useStore();\n  return (\n    <Container>\n      <Header as=\"h1\" content=\"Server Error\" />\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\n      {commonStore.error?.details && (\n        <Segment>\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\n        </Segment>\n      )}\n    </Container>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../../stores/store\";\n\nexport default observer(function ModalContainer() {\n  const { modalStore } = useStore();\n\n  return (\n    <Modal\n      open={modalStore.modal.open}\n      onClose={modalStore.closeModal}\n      size=\"mini\"\n    >\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\n    </Modal>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\nimport { UserActivity } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\nimport { format } from \"date-fns\";\n\nconst panes = [\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\n];\n\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n\n  const {\n    loadUserActivities,\n    profile,\n    loadingActivities,\n    userActivities,\n  } = profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(\n      profile!.username,\n      panes[data.activeIndex as number].pane.key\n    );\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\n                  <Card.Meta textAlign=\"center\">\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileCard from \"./ProfileCard\";\n\nexport default observer(function ProfileFollowings() {\n  const { profileStore } = useStore();\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={\n              activeTab === 3\n                ? `People following ${profile?.displayName}`\n                : `People ${profile?.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={4}>\n            {followings.map((profile) => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React from \"react\";\nimport { Cropper } from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({\n  imagePreview,\n  setCropper,\n}: Props) {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: \"100%\" }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview=\".img-preview\"\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\n  const dzStyles = {\n    border: \"dashed 3px #eee\",\n    borderColor: \"#eee\",\n    borderRadius: \"5px\",\n    paddingTop: \"30px\",\n    textAlign: \"center\" as \"center\",\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: \"green\",\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\n    >\n      <input {...getInputProps()} />\n      <Icon name=\"upload\" size=\"huge\" />\n      <Header content=\"Drop image here\" />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Header, Image } from \"semantic-ui-react\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\n\ninterface Props {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => {\n        URL.revokeObjectURL(file.preview);\n      });\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header color=\"teal\" content=\"Step 1 - Add Photo\" sub />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header color=\"teal\" content=\"Step 2 - Resize image\" sub />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropper\n            setCropper={setCropper}\n            imagePreview={files[0].preview}\n          />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header color=\"teal\" content=\"Step 3 - Preview & Upload\" sub />\n        {files && files.length > 0 && (\n          <>\n            <div\n              className=\"img-preview\"\n              style={{ minHeight: 200, overflow: \"hidden\" }}\n            />\n            <Button.Group widths={2}>\n              <Button\n                loading={loading}\n                onClick={onCrop}\n                positive\n                icon=\"check\"\n              />\n              <Button\n                disabled={loading}\n                onClick={() => setFiles([])}\n                icon=\"close\"\n              />\n            </Button.Group>\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent, useState } from \"react\";\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\nimport PhotoUploadWidget from \"../../app/common/form/imageUpload/PhotoUploadWidget\";\nimport { Photo, Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({ profile }: Props) {\n  const {\n    profileStore: {\n      isCurrentUser,\n      uploadPhoto,\n      uploading,\n      loading,\n      setMainPhoto,\n      deletePhoto,\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n\n  function handleSetMainPhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header icon=\"image\" content=\"Photos\" floated=\"left\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={handlePhotoUpload}\n              loading={uploading}\n            />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {profile.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths={2}>\n                      <Button\n                        basic\n                        color=\"green\"\n                        content=\"Main\"\n                        name={\"main\" + photo.id}\n                        disabled={photo.isMain}\n                        loading={target === \"main\" + photo.id && loading}\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\n                      />\n                      <Button\n                        basic\n                        color=\"red\"\n                        icon=\"trash\"\n                        disabled={photo.isMain}\n                        name={photo.id}\n                        loading={target === photo.id && loading}\n                        onClick={(e) => handleDeletePhoto(photo, e)}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileActivities from \"./ProfileActivities\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport ProfilePhotos from \"./ProfilePhotos\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileContent({ profile }: Props) {\n  const { profileStore } = useStore();\n  const panes = [\n    { menuItem: \"About\", render: () => <Tab.Pane>About Content</Tab.Pane> },\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\n    {\n      menuItem: \"Followers\",\n      render: () => <ProfileFollowings />,\n    },\n    {\n      menuItem: \"Following\",\n      render: () => <ProfileFollowings />,\n    },\n  ];\n\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport {\n  Divider,\n  Grid,\n  Header,\n  Item,\n  Segment,\n  Statistic,\n} from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileHeader({ profile }: Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size=\"small\"\n                src={profile.image || \"/assets/user.png\"}\n              />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label=\"Followers\" value={profile.followersCount} />\n            <Statistic label=\"Following\" value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileContent from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nexport default observer(function ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    };\n  }, [loadProfile, username, setActiveTab]);\n\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile && (\n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileContent profile={profile} />\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React from \"react\";\nimport {\n  Redirect,\n  Route,\n  RouteComponentProps,\n  RouteProps,\n} from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n  const {\n    userStore: { isLoggedIn },\n  } = useStore();\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport Navbar from \"./Navbar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/form/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded)\n    return <LoadingComponent content=\"Loading app...\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <Navbar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}